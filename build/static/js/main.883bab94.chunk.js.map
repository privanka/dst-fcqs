{"version":3,"sources":["components/Dashboard1.js","components/Dashboard2.js","components/Home.js","navigation/Main.js","navigation/Content.js","App.js","reportWebVitals.js","index.js"],"names":["tableau","window","setVizStyle","width","height","Dashboard1","props","useState","url","ref","useRef","options","device","useEffect","Viz","current","style","Dashboard2","Home","href","Main","path","component","Header","className","to","App","Content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gNAEQA,EAAYC,OAAZD,QA2BR,IAAME,EAAc,CAChBC,MAAO,SACPC,OAAQ,SAGGC,EA9Bf,SAAoBC,GAAQ,IAAD,EACTC,mBACV,6GADGC,EADgB,oBAIjBC,EAAMC,iBAAO,MAEbC,EAAU,CACZC,OAAQ,WAWZ,OAJAC,qBAAU,WAHN,IAAIb,EAAQc,IAAIL,EAAIM,QAASP,EAAKG,KAKnC,IAGC,8BACI,qBAAKK,MAAOd,EAAaO,IAAKA,OCtBlCT,EAAYC,OAAZD,QAyBJ,IAAME,EAAc,CAClBC,MAAO,OACPC,OAAQ,SAGCa,EA5Bf,WACI,IAAMR,EAAMC,iBAAO,MAGXC,EAAU,CACZC,OAAQ,WAWZ,OAJAC,qBAAU,WAHR,IAAIb,EAAQc,IAAIL,EAAIM,QAPZ,4GAO0BJ,KAKlC,IAGA,8BACE,qBAAKK,MAAOd,EAAaO,IAAKA,OCpBpBR,OAAZD,QA8BOkB,MA5Bf,WAEI,OACI,gCACI,yDACA,uBAEA,yCACA,wJAEA,4KAEA,4KAEA,uBAEA,yCACA,yGACgB,mBAAGC,KAAK,mDAAR,sBADhB,+CAEA,yKAEA,iJACA,2BCPGC,MAZf,WACE,OACE,oCACE,cAAC,IAAD,CAAOC,KAAK,eAAeC,UAAWjB,IACtC,cAAC,IAAD,CAAOgB,KAAK,eAAeC,UAAWL,IACtC,cAAC,IAAD,CAAOI,KAAK,SAASC,UAAWJ,QCiBvBK,MAxBf,WACE,OACE,cAAC,IAAD,UACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,QAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,cAAT,6BAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,cAAT,kCAKN,cAAC,EAAD,UCdOC,MAJf,WACE,OAAO,cAACC,EAAD,K,QCMMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,EAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.883bab94.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nconst { tableau } = window;\n\nfunction Dashboard1(props) {\n    const [url] = useState(\n        \"https://public.tableau.com/views/Tableau_FCQ/Final_1?:language=en&:display_count=y&:origin=viz_share_link\"\n    );\n    const ref = useRef(null);\n\n    const options = {\n        device: \"desktop\"\n    };\n\n    function initViz() {\n        new tableau.Viz(ref.current, url, options);\n    };\n\n    useEffect(() => {\n        initViz();\n    }, []);\n\n    return (\n        <div>\n            <div style={setVizStyle} ref={ref} />\n        </div>\n    );\n}\n\nconst setVizStyle = {\n    width: \"1069px\",\n    height: \"550px\",\n};\n\nexport default Dashboard1;","import React, { useEffect, useRef, useState } from \"react\"\n\nconst { tableau } = window;\n\nfunction Dashboard2() {\n    const ref = useRef(null);\n    const url = \"https://public.tableau.com/views/Tableau_FCQ/Final_2?:language=en&:display_count=y&:origin=viz_share_link\"\n\n      const options = {\n          device: \"desktop\"\n      };\n    \n      function initViz() {\n        new tableau.Viz(ref.current, url, options);\n      };\n    \n      useEffect(() => {\n          initViz();\n      },[]);\n    \n      return (\n        <div>\n          <div style={setVizStyle} ref={ref} />\n        </div>\n      );\n    }\n    \n    const setVizStyle = {\n      width: \"1000\",\n      height: \"550px\",\n    };\n\nexport default Dashboard2;\n\n","import React, { useEffect, useRef, useState } from \"react\";\n\nconst { tableau } = window;\n\nfunction Home() {\n\n    return (\n        <div>\n            <h1>CU Boulder FCQ Analysis</h1>\n            <br></br>\n\n            <h3> About </h3>\n            <p> This project examines the FCQ data provided by CU boulder, and is provide better Tableau visualization \n                dashboards for </p>\n            <p> the data. Currently the data is broken into two dashboards, the first dashboard provides analyzes the \n                relation between the instructor and </p>\n            <p> the average course results. Dashboard two focuses more on the instructors specifically and sees which cluster of \n                the data they belong to. </p>\n            <br></br>\n\n            <h3> Tools </h3>\n            <p> The data we used is available for anyone to utilize on the \n                CU Boulder  <a href=\"https://www.colorado.edu/fcq/boulder-fcq-results\">FCQ site</a>, we want to continue making improvements</p>\n            <p> to the site ideally incorporating more of the data provided, as well\n                as creating more dashboards with greater filtering capabilities.  </p>\n            <p> For cleaning the data we used the Python, pandas library, and utilized Tableau for the visulization component. </p>\n            <br></br>\n\n        </div>\n    );\n}\n\nexport default Home;","import { Route, BrowserRouter as Router } from \"react-router-dom\";\n\nimport Dashboard1 from \"../components/Dashboard1\";\nimport Dashboard2 from \"../components/Dashboard2\";\nimport Home from \"../components/Home\";\nimport React from \"react\";\n\nfunction Main() {\n  return (\n    <section>\n      <Route path=\"/Dashboard1/\" component={Dashboard1} />\n      <Route path=\"/Dashboard2/\" component={Dashboard2} />\n      <Route path=\"/Home/\" component={Home} />\n\n      {/* testing sending string prop and destructure in component */}\n    </section>\n  );\n}\n\nexport default Main;","import { Link, Route, BrowserRouter as Router } from \"react-router-dom\";\n\nimport Main from \"./Main\";\nimport React from \"react\";\n\nfunction Header() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav className=\"navBar\">\n          <ul>\n            <li>\n              <Link to=\"/Home\"> Home</Link>\n            </li>\n            <li>\n              <Link to=\"/Dashboard1\"> Dashboard 1 </Link>\n            </li>\n            <li>\n              <Link to=\"/Dashboard2\"> Dashboard 2 </Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Main />\n      </div>\n    </Router>\n  );\n}\n\nexport default Header;","import \"./App.css\";\n\nimport Content from \"./navigation/Content.js\";\nimport React from \"react\";\n\nfunction App() {\n  return <Content />;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}